apiVersion: v1
kind: Template
metadata:
  name: cloud-native-guides
parameters:
- displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: guides
- displayName: Workshopper Image Version
  name: WORKSHOPPER_VERSION
  required: true
  value: ruby
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: CONTENT_URL_PREFIX
            value: https://raw.githubusercontent.com/openshift-roadshow/cloud-native-guides/master
          - name: WORKSHOPS_URLS
            value: file:///app/config/cloud-native-roadshow.yml
          - name: CACHE_PRELOAD
            value: "true"
          image: workshopper
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: cloud-native-roadshow.yml
              path: cloud-native-roadshow.yml
            name: ${APPLICATION_NAME}
          name: config
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: workshopper:${WORKSHOPPER_VERSION}
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}-cdk
    name: ${APPLICATION_NAME}-cdk
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}-cdk
      deploymentconfig: ${APPLICATION_NAME}-cdk
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}-cdk
          deploymentconfig: ${APPLICATION_NAME}-cdk
      spec:
        containers:
        - env:
          - name: CONTENT_URL_PREFIX
            value: https://raw.githubusercontent.com/openshift-roadshow/cloud-native-guides/master
          - name: WORKSHOPS_URLS
            value: file:///app/config/cloud-native-roadshow-cdk.yml
          - name: CACHE_PRELOAD
            value: "true"
          image: workshopper
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ${APPLICATION_NAME}-cdk
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: cloud-native-roadshow-cdk.yml
              path: cloud-native-roadshow-cdk.yml
            name: ${APPLICATION_NAME}
          name: config
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}-cdk
        from:
          kind: ImageStreamTag
          name: workshopper:${WORKSHOPPER_VERSION}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: workshopper
  spec:
    dockerImageRepository: docker.io/osevg/workshopper
    tags:
    - name: "${WORKSHOPPER_VERSION}"
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}-cdk
    name: ${APPLICATION_NAME}-cdk
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}-cdk
      deploymentconfig: ${APPLICATION_NAME}-cdk
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    name: ${APPLICATION_NAME}-cdk
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${APPLICATION_NAME}-cdk
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  data:
    cloud-native-roadshow-cdk.yml: |-
      id: "roadshow"
      name: "OpenShift Cloud-Native Roadshow"
      vars:
        OPENSHIFT_DOCS_BASE: "https://docs.openshift.com/container-platform/3.6"
        COOLSTORE_PROJECT: "coolstore"
        DOWNLOAD_CLIENT_WINDOWS: https://mirror.openshift.com/pub/openshift-v3/clients/3.6.173.0.5/windows/oc.zip
        DOWNLOAD_CLIENT_MAC: https://mirror.openshift.com/pub/openshift-v3/clients/3.6.173.0.5/macosx/oc.tar.gz
        DOWNLOAD_CLIENT_LIN64: https://mirror.openshift.com/pub/openshift-v3/clients/3.6.173.0.5/linux/oc.tar.gz
        LABS_GIT_REPO: https://github.com/openshift-roadshow/cloud-native-labs.git
        LABS_DOWNLOAD_URL: https://github.com/openshift-roadshow/cloud-native-labs/archive/master.zip
        WEB_NODEJS_GIT_REPO: https://github.com/openshift-roadshow/cloud-native-labs/tree/master/web-nodejs
        REMOTE_DEBUGGER_JDB: true
        REMOTE_DEBUGGER_JBDS: true
        REMOTE_DEBUGGER_IDEA: true
        MINISHIFT: true
        OPENSHIFT_CONSOLE_URL: OPENSHIFT-CONSOLE-URL
        INVENTORY_ROUTE_HOST: INVENTORY-ROUTE-HOST
        CATALOG_ROUTE_HOST: CATALOG-ROUTE-HOST
        API_GATEWAY_ROUTE_HOST: API-GATEWAY-ROUTE-HOST
      modules:
        activate:
        - getting-started
        - wildfly-swarm
        - spring-boot
        - vertx
        - nodejs
        - health
        - fault-tolerance
        - app-config
        - continuous-delivery
        - debug
    cloud-native-roadshow.yml: |-
      id: "roadshow"
      name: "OpenShift Cloud-Native Roadshow"
      vars:
        OPENSHIFT_DOCS_BASE: "https://docs.openshift.com/container-platform/3.6"
        COOLSTORE_PROJECT: "coolstore"
        DOWNLOAD_CLIENT_WINDOWS: https://mirror.openshift.com/pub/openshift-v3/clients/3.6.173.0.5/windows/oc.zip
        DOWNLOAD_CLIENT_MAC: https://mirror.openshift.com/pub/openshift-v3/clients/3.6.173.0.5/macosx/oc.tar.gz
        DOWNLOAD_CLIENT_LIN64: https://mirror.openshift.com/pub/openshift-v3/clients/3.6.173.0.5/linux/oc.tar.gz
        LABS_GIT_REPO: https://github.com/openshift-roadshow/cloud-native-labs.git
        LABS_DOWNLOAD_URL: https://github.com/openshift-roadshow/cloud-native-labs/archive/master.zip
        WEB_NODEJS_GIT_REPO: https://github.com/openshift-roadshow/cloud-native-labs/tree/master/web-nodejs
        REMOTE_DEBUGGER_JDB: true
        REMOTE_DEBUGGER_JBDS: true
        REMOTE_DEBUGGER_IDEA: true
        MINISHIFT: false 
        OPENSHIFT_CONSOLE_URL: OPENSHIFT-CONSOLE-URL
        INVENTORY_ROUTE_HOST: INVENTORY-ROUTE-HOST
        CATALOG_ROUTE_HOST: CATALOG-ROUTE-HOST
        API_GATEWAY_ROUTE_HOST: API-GATEWAY-ROUTE-HOST
      modules:
        activate:
        - getting-started
        - wildfly-swarm
        - spring-boot
        - vertx
        - nodejs
        - health
        - fault-tolerance
        - app-config
        - continuous-delivery
        - debug
  kind: ConfigMap
  metadata:
    name: ${APPLICATION_NAME}